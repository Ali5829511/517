name: Deployment Automation
# Ø³ÙŠØ± Ø¹Ù…Ù„ Ø§Ù„Ù†Ø´Ø± Ø§Ù„ØªÙ„Ù‚Ø§Ø¦ÙŠ Ù„Ù„ØªØ·Ø¨ÙŠÙ‚

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [ closed ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment'
        required: false
        default: 'false'

jobs:
  pre-deployment-checks:
    name: Pre-Deployment Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest flake8
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest test_app.py -v
        
    - name: Verify deployment files
      run: |
        echo "Checking deployment configuration files..."
        test -f Procfile && echo "âœ“ Procfile exists" || echo "âœ— Procfile missing"
        test -f requirements.txt && echo "âœ“ requirements.txt exists" || echo "âœ— requirements.txt missing"
        test -f runtime.txt && echo "âœ“ runtime.txt exists" || echo "âœ— runtime.txt missing"
        test -f housing_database.db && echo "âœ“ Database exists" || echo "âœ— Database missing"
        test -f railway.json && echo "âœ“ Railway config exists" || echo "âœ— Railway config missing"
        test -f render.yaml && echo "âœ“ Render config exists" || echo "âœ— Render config missing"
        
    - name: Check database integrity
      run: |
        python -c "import sqlite3; conn = sqlite3.connect('housing_database.db'); cursor = conn.cursor(); cursor.execute('SELECT COUNT(*) FROM residents'); residents = cursor.fetchone()[0]; cursor.execute('SELECT COUNT(*) FROM buildings'); buildings = cursor.fetchone()[0]; cursor.execute('SELECT COUNT(*) FROM units'); units = cursor.fetchone()[0]; conn.close(); print(f'âœ“ Database OK: {residents} residents, {buildings} buildings, {units} units')"
        
  build-info:
    name: Generate Build Information
    runs-on: ubuntu-latest
    needs: pre-deployment-checks
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate deployment timestamp
      id: timestamp
      run: |
        echo "timestamp=$(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
        echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "version=$(date '+%Y.%m.%d.%H%M')" >> $GITHUB_OUTPUT
        
    - name: Create build info file
      run: |
        echo "Build Date: ${{ steps.timestamp.outputs.timestamp }}" > BUILD_INFO.txt
        echo "Git Commit: ${{ steps.timestamp.outputs.short_sha }}" >> BUILD_INFO.txt
        echo "Version: ${{ steps.timestamp.outputs.version }}" >> BUILD_INFO.txt
        echo "Branch: ${{ github.ref_name }}" >> BUILD_INFO.txt
        echo "Triggered by: ${{ github.event_name }}" >> BUILD_INFO.txt
        echo "Actor: ${{ github.actor }}" >> BUILD_INFO.txt
        echo "Python Version: 3.11.0" >> BUILD_INFO.txt
        cat BUILD_INFO.txt
        
    - name: Upload build info
      uses: actions/upload-artifact@v3
      with:
        name: build-info
        path: BUILD_INFO.txt
        
  notify-deployment:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: build-info
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build info
      uses: actions/download-artifact@v3
      with:
        name: build-info
        
    - name: Display deployment info
      run: |
        echo "=========================================="
        echo "Ù†Ø¸Ø§Ù… Ø¥Ø¯Ø§Ø±Ø© Ø§Ù„Ø¥Ø³ÙƒØ§Ù† Ø§Ù„Ø¬Ø§Ù…Ø¹ÙŠ"
        echo "University Housing Management System"
        echo "=========================================="
        cat BUILD_INFO.txt
        echo "=========================================="
        echo ""
        echo "Deployment Status:"
        echo "âœ“ Pre-deployment checks passed"
        echo "âœ“ Tests passed"
        echo "âœ“ Build information generated"
        echo ""
        echo "The application is ready for deployment on:"
        echo "- Railway: Auto-deploy enabled (if configured)"
        echo "- Render: Auto-deploy enabled (if configured)"
        echo "- Vercel: Auto-deploy enabled (if configured)"
        echo ""
        echo "Manual deployment steps (if needed):"
        echo "1. Railway: Push to main branch triggers auto-deploy"
        echo "2. Render: Push to main branch triggers auto-deploy"
        echo "3. Vercel: Push to main branch triggers auto-deploy"
        echo ""
        echo "To verify deployment:"
        echo "- Check Railway dashboard: https://railway.app/dashboard"
        echo "- Check Render dashboard: https://dashboard.render.com"
        echo "- Check Vercel dashboard: https://vercel.com/dashboard"
        echo "=========================================="
        
    - name: Create deployment summary
      run: |
        echo "## ðŸš€ Deployment Ready" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Information" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat BUILD_INFO.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Targets" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Railway.app (Auto-deploy enabled)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Render.com (Auto-deploy enabled)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Vercel (Auto-deploy enabled)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Post-Deployment Verification" >> $GITHUB_STEP_SUMMARY
        echo "Test these endpoints after deployment:" >> $GITHUB_STEP_SUMMARY
        echo "- `/` - Main page" >> $GITHUB_STEP_SUMMARY
        echo "- `/api/version` - Version info" >> $GITHUB_STEP_SUMMARY
        echo "- `/api/statistics` - System statistics" >> $GITHUB_STEP_SUMMARY
        echo "- `/static/main_portal.html` - Main portal" >> $GITHUB_STEP_SUMMARY
